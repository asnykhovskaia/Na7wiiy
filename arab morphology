#морфология глагола
def verb_gen(gram: list):
    global verbs
    global GRAM
    clitics = {
        "allatī": ["hā", "hā", "hā", "hā"],
        "allaḏī": ['hu', 'hi', 'hū', 'hī'],
        "ʾallaḏīna": ['hum', 'him', 'hum', 'him'],
        "ʾallātī": ['hunna', 'hinna', 'hunna', 'hinna'],
        "allaḏayni": ['humā', 'himā', 'humā', 'himā'],
        "allatayni": ['humā', 'himā', 'humā', 'himā']
    }
    form = gram[1]
    verb = verbs[gram[0]][0]
    vow = verbs[gram[0]][1]
    der = verbs[gram[0]][2]
    weak = verbs[gram[0]][3]
    harmony = 0
    length = 0
    vows = ["a", "i", "u", ["ā", "ī", "ū"]]
    verb = verb[:-1]
    if form[0] == "perf":
        if form[1] == "3msg":
            verb += "a"
        elif form[1] == "3fsg":
            verb += "at"
        elif form[1] == "2msg":
            verb += "ta"
        elif form[1] == "2fsg":
            verb += "ti"
        elif form[1] == "1sg":
            verb += "tu"
        elif form[1] == "3mdu":
            verb += "ā"
        elif form[1] == "3fdu":
            verb += "atā"
        elif form[1] == "2du":
            verb += "tumā"
        elif form[1] == "1dp":
            verb += "nā"
        elif form[1] == "3mpl":
            verb += "ū"
        elif form[1] == "3fpl":
            verb += "na"
        elif form[1] == "2mpl":
            verb += "tum"
        elif form[1] == "2fpl":
            verb += "tunna"
    elif form[0] == "imp":
        if der == 1:
            verb = verb[0] + verb[2] + vow + verb[4]
        else:
            verb = verb[:-2] + vow + verb[-1]
        if verb[0] == "i":
            verb = verb[1:]
        if der == 1 or der > 4:
            if form[1] == "3msg" or form[1] == "3mdu" or form[1] == "3mpl" or form[1] == "3fpl":
                verb = "ya" + verb
            elif form[1] == "1sg":
                verb = "ˀa" + verb
                if "ˀaˀ" in verb:
                   verb = "ˀā" + verb[4:]
                # диссимиляция хамзы
            elif form[1] == "1dp":
                verb = "na" + verb
            else:
                verb = "ta" + verb
        if der > 1 and der < 5:
            if der == 4 and "ˀā" not in verb:
                verb = verb[2:]
            if form[1] == "3msg" or form[1] == "3mdu" or form[1] == "3mpl" or form[1] == "3fpl":
                verb = "yu" + verb
            elif form[1] == "1sg":
                verb = "ˀu" + verb
                if "ˀuˀ" in verb:
                   verb = "ˀū" + verb[4:]
                # диссимиляция хамзы
            elif form[1] == "1dp":
                verb = "nu" + verb
            else:
                verb = "tu" + verb
        if "du" in form[1]:
            verb += "āni"
        elif "mpl" in form[1]:
            verb += "ūna"
        elif "fpl" in form[1]:
            verb += "na"
        elif "2fsg" in form[1]:
            verb += "īna"
        else:
            verb += "u"
    #СЛАБЫЕ
    zero = verb.find("0")
    #удвоенный -- вроде работает
    if weak == 4:
        if form[0] == "perf":
            if "3" in form[1] and form[1] != "3fpl":
                if "3m" in form[1]:
                    verb = verb[:-4] + verb[-3] + verb[-4] + verb[-2:]
                elif form[1] == "3fsg":
                    verb = verb[:-5] + verb[-4] + verb[-5] + verb[-3:]
                elif form[1] == "3fdu":
                    verb = verb[:-6] + verb[-5] + verb[-6] + verb[-4:]
            if "aa" in verb:
                verb = verb.replace("aa", "a")
        else:
            if "fpl" not in form[1]:
                if "sg" in form[1] and "2f" not in form[1] or form[1] == "1dp":
                    verb = verb[:-4] + vow + verb[-2] + verb[-2:]
                else:
                    verb = verb[:-6] + vow + verb[-4] + verb[-4:]

    #первый слабый
    if weak == 1:
        if der == 8:
            verb = verb.replace("0", verb[zero+1])
        elif der == 1 and form[0] == "imp":
            verb = verb[:zero] + verb[zero+1:]
        else:
            verb = verb.replace("0", "w")

    #второй слабый -- вроде работает
    if weak == 2:
        verb = verb[:zero] + verb[zero+1:]
        if der == 1 and form[0] == "perf":
            if vow == "i" or vow == "a":
                verb = verb[:zero] + "i" + verb[zero+1:]
            elif vow == "u":
                verb = verb[:zero] + "u" + verb[zero+1:]
        if form[0] == "perf":
             if verb[zero+2] not in vows and verb[zero+2] not in vows[3]:
                if verb[zero-1] in vows:
                    verb = verb[:zero-1] + verb[zero:]
             else:
                if verb[zero-1] in vows:
                    verb = verb[:zero-1] + "ā" + verb[zero+1:]
                else:
                    verb = verb[:zero] + "ā" + verb[zero+1:]
        else:
            if verb[zero+2] in vows or verb[zero+2] in vows[3]:
                verb = verb[:zero] + vows[3][vows.index(verb[zero])] + verb[zero+1:]
            if verb[zero-1] in vows:
                verb = verb[:zero-1] + verb[zero:]

    #третий слабый
    if zero != -1 and weak == 3:
        #если в основе а -- теперь работает
        if verb[zero-1] == "a":
            if verb[zero + 1] not in vows[3] and verb[zero + 1] in vows: #and (zero == len(verb) - 3 and verb[-2] in vows or zero > len(verb) - 3):
                if verb[zero-1] in vows and verb[zero+1] in vows:
                    verb = verb[:zero+1] + verb[zero+2:]
                    if verb[-1] == "0" or verb[zero+1] in vows:
                        verb = verb.replace(verb[zero-1] + "0", vows[3][vows.index(verb[zero-1])] + "0")
                verb = verb[:zero] + verb[zero+1:]
            if verb[zero-1] in vows:
                verb = verb.replace("0ū", "w")
                verb = verb.replace("0ī", "y")
            if vow == "i" or vow == "a":
                verb = verb.replace("0", "y")
            elif vow == "u":
                verb = verb.replace("0", "w")
        #если в основе не а -- теперь работает
        elif verb[zero-1] != "a":
            if verb[zero+1] != "a" and verb[zero+1] != "ā":
                verb = verb[:zero] + verb[zero+1:]
                if verb[zero-1] in vows and verb[zero] in vows[3]:
                    verb = verb[:zero-1] + verb[zero:]
                if verb[zero-1] in vows and verb[zero-1] not in vows[3]:
                    if verb[zero] == "t":
                        verb = verb.replace(verb[zero-1] + "t", vows[3][vows.index(verb[zero-1])] + "t")
                    elif verb[zero] == "n":
                        verb = verb.replace(verb[zero-1] + "n", vows[3][vows.index(verb[zero-1])] + "n")
                    elif verb[zero-1] == verb[-2]:
                        verb = verb.replace(verb[zero-1], vows[3][vows.index(verb[zero-1])])
                    if verb[zero] in vows or verb[zero] in vows[3]:
                        verb = verb[:zero] + verb[zero+1:]
            if vow == "i" or vow == "a":
                verb = verb.replace("0", "y")
            elif vow == "u":
                verb = verb.replace("0", "w")
    if "sawfa" in form:
        verb = "sawfa" + " " + verb

    if verb[-1] not in vows:
        length = 2
    if verb[-1] == "i" or verb[-1] == "ī":
        harmony = 1
    if len(gram) >= 3:
        verb = gram[2] + " " + verb
    if len(gram) > 3:
        verb += clitics[gram[-2]][length+harmony]
    return verb



#склонение


def declension(noun: list):
    global nouns
    word = noun[0]
    condition = noun[1]
    form = noun[2]
    num = noun[3]
    ends = {"nom": "u", "gen": "i", "acc": "a"}
    assamsu = {"t", "d", "r", "z", "s", "n", "š", "ṯ", "ḏ", "ṣ", "ḍ", "ṭ", "ẓ"}
    if num == "pl":
        result = pl_declension(word, condition, form)
        if condition == "indef":
            return result
        else:
            word = result
    elif num == "du":
        if nouns[word][0][-1] == "u":
            word = nouns[word][0][:-1]
        if form == "nom":
            word = nouns[word][0] + "ā"
        else:
            word = nouns[word][0] + "ay"
        if condition == "constr":
            return word
        else:
            word = word + "ni"
        if condition == "indef":
            return word
    elif nouns[word][0][-1] == "u":
        word = nouns[word][0][:-1]
        if form != "nom":
            if condition == "indef":
                word = word[:-1] + "a"
            else:
                if form == "gen":
                    word = word[:-1] + "i"
                if form == "acc":
                    word = word[:-1] + "a"
        if condition != "def":
            return word
    else:
        word = nouns[word][0] + ends[form]
    if condition == "indef":
        return word + "n"
    elif condition == "def":
        if word[-1] == "ū" or word[-1] == "ī":
            word = word + "na"
        if word[0] in assamsu:
            return "a" + word[0] + "-" + word
        else:
            return "al-" + word
    elif condition == "constr":
        return word


def pl_declension(word: str, condition: str, form: str):
    global nouns
    word_pl = nouns[word][1]
    word = nouns[word][0]
    if word_pl == 1:
        if word[-2:] == "at":
            word = word[:-2] + "āt"
            if form == "nom":
                word = word + "u"
            else:
                word = word + "i"
            if condition == "indef":
                word = word + "n"
            return word
        else:
            if form == "nom":
                word = word + "ū"
            else:
                word = word + "ī"
            if condition == "indef":
                word = word + "na"
            return word
    elif word_pl == 0:
        word = word
    elif type(word_pl) is str:
        word = word_pl
    if word[-1] == "u":
        if form != "nom":
            if condition == "indef":
                word = word[:-1] + "a"
            else:
                if form == "gen":
                    word = word[:-1] + "i"
                if form == "acc":
                    word = word[:-1] + "a"
        return word
    if form == "nom":
        word = word + "u"
    elif form == "gen":
        word = word + "i"
    elif form == "acc":
        word = word + "a"
    if condition == "indef":
        word = word + "n"
    return word


#склонение прилагательных

def adj_declension(adj: list):
    global adjs
    word = adj[0]
    condition = adj[1]
    form = adj[2]
    num = adj[3]
    gender = adj[4]
    ends = {"nom": "u", "gen": "i", "acc": "a"}
    assamsu = {"t", "d", "r", "z", "s", "n", "š", "ṯ", "ḏ", "ṣ", "ḍ", "ṭ", "ẓ"}
    if gender == "fem":
        word = adjs[word][0] + "at"
        if num == "pl":
            word = word + "_"
    if num == "pl":
        result = adj_pl_declension(word, condition, form)
        if condition == "indef":
            return result
        else:
            word = result
    elif num == "du":
        word = adjs[word][0]
        if word[-1] == "u":
            word = word[:-1]
        if form == "nom":
            word = word + "ā"
        else:
            word = word + "ay"
        if condition == "constr":
            return word
        else:
            word = word + "ni"
        if condition == "indef":
            return word
    elif adjs[word][0] == "u":
        word = adjs[word][0]
        if form != "nom":
            if condition == "indef":
                word = word[:-1] + "a"
            else:
                if form == "gen":
                    word = word[:-1] + "i"
                if form == "acc":
                    word = word[:-1] + "a"
        if condition != "def":
            return word
    else:
        word = adjs[word][0] + ends[form]
    if condition == "indef":
        return word + "n"
    elif condition == "def":
        if word[-1] == "ū" or word[-1] == "ī":
            word = word + "na"
        if word[0] in assamsu:
            return "a" + word[0] + "-" + word
        else:
            return "al-" + word
    elif condition == "constr":
        return word

def adj_pl_declension(word, condition, form):
    global adjs
    word_pl = adjs[word][1]
    word = adjs[word][0]
    if word[-1] == "_":
        word = word[:-2] + "āt"
        if form == "nom":
            word = word + "u"
        else:
            word = word + "i"
        if condition == "indef":
            word = word + "n"
        return word
    if word_pl == 1:
        if word[-2:] == "at":
            word = word[:-2] + "āt"
            if form == "nom":
                word = word + "u"
            else:
                word = word + "i"
            if condition == "indef":
                word = word + "n"
            return word
        else:
            if form == "nom":
                word = word + "ū"
            else:
                word = word + "ī"
            if condition == "indef":
                word = word + "na"
            return word
    elif word_pl == 0:
        word = word
    elif type(word_pl) is str:
        word = word_pl
    if word[-1] == "u":
        if form != "nom":
            if condition == "indef":
                word = word[:-1] + "a"
            else:
                if form == "gen":
                    word = word[:-1] + "i"
                if form == "acc":
                    word = word[:-1] + "a"
        return word
    if form == "nom":
        word = word + "u"
    elif form == "gen":
        word = word + "i"
    elif form == "acc":
        word = word + "a"
    if condition == "indef":
        word = word + "n"
    return word
